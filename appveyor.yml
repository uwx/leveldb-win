# Build matrix / environment variables are explained on:
# https://www.appveyor.com/docs/appveyor-yml/
# This file can be validated on: https://ci.appveyor.com/tools/validate-yaml

version: "{build}"

environment:
  # AppVeyor currently has no custom job name feature.
  # http://help.appveyor.com/discussions/questions/1623-can-i-provide-a-friendly-name-for-jobs
  JOB: Visual Studio 2019
  APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  CMAKE_GENERATOR: Visual Studio 16 2019
  matrix:
    - BUILD_SHARED_LIBS: 'True'
    - BUILD_SHARED_LIBS: 'False'
platform:
  - x86
  - x64

configuration:
  - RelWithDebInfo
  - Debug

build_script:
  - git submodule update --init --recursive
  - mkdir build
  - cd build
  - if "%platform%"=="x86" (set CMAKE_GENERATOR_PLATFORM="Win32")
      else (set CMAKE_GENERATOR_PLATFORM="%platform%")
  - cmake --version
  - cmake .. -G "%CMAKE_GENERATOR%" -A "%CMAKE_GENERATOR_PLATFORM%"
      -DCMAKE_CONFIGURATION_TYPES="%CONFIGURATION%"
      -DBUILD_SHARED_LIBS=%BUILD_SHARED_LIBS%
  - cmake --build . --config "%CONFIGURATION%"
  - cd ..

test_script:
  - echo "Where we're going, we don't need tests."
#  - cd build && ctest --verbose --build-config "%CONFIGURATION%" && cd ..

after_build:
  - ps: |-	
      if ($env:BUILD_SHARED_LIBS -eq "True") {	
        $BUILD_TYPE = "Dynamic"
      } else {
        $BUILD_TYPE = "Static"
      }

      if ($env:CONFIGURATION -eq "Debug") {
        $env:ZIP_NAME = "leveldb ($BUILD_TYPE $env:platform Debug)"
        $env:CONFIGURATION_PRETTY = "Debug"
      } else {
        $env:ZIP_NAME = "leveldb ($BUILD_TYPE $env:platform)"
        $env:CONFIGURATION_PRETTY = "Release"
      }

      $Output = "$env:APPVEYOR_BUILD_FOLDER\build\$env:CONFIGURATION"

      if (Test-Path "$Output\leveldb.dll") { 7z a "$env:ZIP_NAME.zip" "$Output\leveldb.dll" }
      if (Test-Path "$Output\leveldb.lib") { 7z a "$env:ZIP_NAME.zip" "$Output\leveldb.lib" }
      if (Test-Path "$Output\leveldb.exp") { 7z a "$env:ZIP_NAME.zip" "$Output\leveldb.exp" }
      if (Test-Path "$Output\leveldb.ilk") { 7z a "$env:ZIP_NAME.zip" "$Output\leveldb.ilk" }
      if (Test-Path "$Output\leveldb.pdb") { 7z a "$env:ZIP_NAME.zip" "$Output\leveldb.pdb" }

      if ($BUILD_TYPE -eq "Dynamic" -and $env:CONFIGURATION_PRETTY -eq "Release") {
        Push-AppveyorArtifact "$Output\leveldbutil.exe" -FileName "leveldbutil-$env:platform.exe"
      }

      $env:COMMIT_SHORT = $env:APPVEYOR_REPO_COMMIT.Substring(0, 8)

artifacts:
  - path: $(ZIP_NAME).zip
    name: $(ZIP_NAME)

  - path: build\$(CONFIGURATION)
    name: Complete Build Output ($(CONFIGURATION_PRETTY) $(platform))
    type: zip

deploy:
  tag: 'r$(APPVEYOR_BUILD_VERSION)-$(APPVEYOR_REPO_COMMIT)'
  release: '$(COMMIT_SHORT): $(APPVEYOR_REPO_COMMIT_MESSAGE)'
  description: |-
    Built from branch $(APPVEYOR_REPO_BRANCH) at $(APPVEYOR_REPO_COMMIT_TIMESTAMP).
    `$(APPVEYOR_REPO_COMMIT)`: **$(APPVEYOR_REPO_COMMIT_MESSAGE)**
    $(APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED)
  provider: GitHub
  repository: uwx/leveldb-win
  auth_token:
    secure: qNMRA5boyCslJ9JgiqjpLdHd0NvhQVWcjJx3ZMrcgrDz6DNFJnDsV7w9IZuhqwYZ # your encrypted token from GitHub
  artifact: /leveldb.*.zip/ # don't upload complete build output
  draft: false
  prerelease: false
  on:
    branch: master # release from master branch only

notifications:
  - provider: Slack
    on_build_success: true
    on_build_failure: true
    incoming_webhook:
      secure: +5y63VhkKwOZVK264xwgH8gp7vI2cJivXvseQeSoYYNyH3wjOtid8Qz+gyNOjCGpI/xqxxJNwqFrL75ZPHYOYEKs9WhBWznTsFpJUAs5hxn1kcczMv6WYuwUzXJNEdqX6m47PnS7xrzUZJIRWNQCHRJCtN5VX+hXfVV6BT+tKQdRDeRr/LANhRLr2pAbIOGP
